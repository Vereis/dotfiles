HomeDir = string:chomp(os:cmd("echo $HOME")),
ErlDir  = HomeDir ++ "/.config/erl/",
io:format("Trying to load contents of: ~s... ", [ErlDir]),
Ok = case filelib:is_dir(ErlDir) of
    true ->
        CustomModules = lists:concat([
            filelib:wildcard(ErlDir ++ "*.erl")
        ]),
        lists:foreach(fun(Module) ->
            try compile:file(Module, [nowarn_export_all]) of
                {ok, M} ->
                    io:format("~n - Loaded module \"~p\"", [M]),
                    code:load_abs(M);
                Error ->
                    io:format("~n - Failed loading module ~p : ~p",
                              [filename:basename(Module),
                               Error])
            catch
                T:E ->
                    io:format("~n - Failed loading module ~p : ~p:~p",
                              [filename:basename(Module),
                               T, E])
            end
        end, CustomModules);
    false ->
        io:format("~nDirectory ~s doesn't exist! Aborting~n", [ErlDir])
end,
io:format("~n").
